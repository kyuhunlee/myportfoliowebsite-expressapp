<!DOCTYPE html>
<html>
  <head>
    <title>Contact - Kyu-Hun Lee</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
      }

      body {
        min-height: 100vh;
        background: linear-gradient(135deg, #0f172a 0%, #1e1b4b 100%);
        color: #fff;
        line-height: 1.6;
      }

      .nav {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        padding: 1.5rem;
        background: rgba(15, 23, 42, 0.8);
        backdrop-filter: blur(10px);
        z-index: 100;
      }

      .nav-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .nav-logo {
        font-weight: 700;
        font-size: 1.5rem;
        background: linear-gradient(135deg, #fff 0%, #94a3b8 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .nav-button {
        display: inline-flex;
        align-items: center;
        padding: 12px 24px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        text-decoration: none;
        border-radius: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.1);
      }

      .nav-button:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
      }

      .contact-section {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 6rem 2rem 2rem;
      }

      .container {
        max-width: 800px;
        width: 100%;
        padding: 4rem;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border-radius: 24px;
        border: 1px solid rgba(255, 255, 255, 0.1);
      }

      h1 {
        font-size: 3rem;
        margin-bottom: 1rem;
        font-weight: 700;
        background: linear-gradient(135deg, #fff 0%, #94a3b8 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .contact-intro {
        color: #94a3b8;
        font-size: 1.1rem;
        margin-bottom: 3rem;
        max-width: 600px;
      }

      form {
        margin-top: 2rem;
      }

      .form-group {
        margin-bottom: 2rem;
      }

      label {
        display: block;
        margin-bottom: 0.75rem;
        color: #94a3b8;
        font-weight: 500;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
      }

      input,
      textarea {
        width: 100%;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        color: #fff;
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      input:focus,
      textarea:focus {
        outline: none;
        border-color: rgba(255, 255, 255, 0.3);
        background: rgba(255, 255, 255, 0.1);
        box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.1);
      }

      input::placeholder,
      textarea::placeholder {
        color: rgba(255, 255, 255, 0.3);
      }

      textarea {
        min-height: 150px;
        resize: vertical;
      }

      button {
        display: inline-flex;
        align-items: center;
        padding: 1rem 2rem;
        background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(79, 70, 229, 0.4);
      }

      button:disabled {
        opacity: 0.7;
        cursor: not-allowed;
      }

      .loading-spinner {
        display: none;
        width: 20px;
        height: 20px;
        margin-left: 8px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      .message {
        display: none;
        padding: 1rem;
        border-radius: 12px;
        margin-top: 1rem;
        font-weight: 500;
      }

      .success-message {
        background: rgba(52, 211, 153, 0.1);
        border: 1px solid rgba(52, 211, 153, 0.2);
        color: #34d399;
      }

      .error-message {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.2);
        color: #ef4444;
      }

      .glow {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        background: radial-gradient(
          circle at 50% 50%,
          rgba(120, 119, 198, 0.1),
          transparent 70%
        );
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes float {
        0% {
          transform: translateY(0px);
        }
        50% {
          transform: translateY(-10px);
        }
        100% {
          transform: translateY(0px);
        }
      }

      .animated {
        opacity: 0;
        animation: fadeInUp 0.6s ease forwards;
      }

      .delay-1 {
        animation-delay: 0.2s;
      }
      .delay-2 {
        animation-delay: 0.4s;
      }
      .delay-3 {
        animation-delay: 0.6s;
      }

      .floating {
        animation: float 3s ease-in-out infinite;
      }

      input,
      textarea {
        transition: all 0.3s ease;
      }

      input:focus,
      textarea:focus {
        transform: translateY(-2px);
      }

      .success-message,
      .error-message {
        animation: fadeInUp 0.3s ease;
      }

      button {
        position: relative;
        overflow: hidden;
      }

      button::after {
        content: "";
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(
          circle,
          rgba(255, 255, 255, 0.2) 0%,
          transparent 50%
        );
        transform: scale(0);
        transition: transform 0.3s ease-out;
      }

      button:hover::after {
        transform: scale(1);
      }

      .contact-info {
        display: flex;
        gap: 2rem;
        margin: 2rem 0;
      }

      .contact-item {
        opacity: 0;
        animation: fadeInUp 0.6s ease forwards;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        transition: all 0.3s ease;
      }

      .contact-item:hover {
        transform: translateY(-5px);
        background: rgba(255, 255, 255, 0.1);
      }
    </style>
  </head>
  <body>
    <div class="glow"></div>
    <nav class="nav">
      <div class="nav-content">
        <a href="/" class="nav-logo floating">KL</a>
        <div style="display: flex; gap: 1rem">
          <a href="/postcard" class="nav-button">Write a Note ✉️</a>
          <a href="/" class="nav-button">← Back to Portfolio</a>
        </div>
      </div>
    </nav>

    <section class="contact-section">
      <div class="container animated">
        <h1 class="animated">Let's Connect</h1>
        <p class="contact-intro animated delay-1">
          Whether you're interested in discussing enterprise solutions, cloud
          architecture, or potential opportunities, I'm always open to
          connecting with fellow professionals. Feel free to reach out using the
          form below.
        </p>

        <div class="contact-info">
          <div class="contact-item delay-1">
            <strong style="color: #fff">Phone</strong><br />
            360-742-2308
          </div>
          <div class="contact-item delay-2">
            <strong style="color: #fff">Email</strong><br />
            kyuhunlee@gmail.com
          </div>
          <div class="contact-item delay-3">
            <strong style="color: #fff">LinkedIn</strong><br />
            <a
              href="https://linkedin.com/in/kyuhunlee"
              style="color: #94a3b8; text-decoration: none"
              >/in/kyuhunlee</a
            >
          </div>
        </div>

        <form action="/" method="POST" class="animated delay-2">
          <div class="form-group">
            <label for="name">Your Name</label>
            <input
              type="text"
              id="name"
              name="name"
              required
              placeholder="Enter your name"
            />
          </div>
          <div class="form-group">
            <label for="email">Your Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              placeholder="Enter your email address"
            />
          </div>
          <div class="form-group">
            <label for="message">Message</label>
            <textarea
              id="message"
              name="message"
              required
              placeholder="Tell me about your project or inquiry..."
            ></textarea>
          </div>
          <button type="submit">
            Send Message →
            <div class="loading-spinner" id="spinner"></div>
          </button>
        </form>
        <div class="message success-message" id="success">
          Message sent successfully! I'll get back to you soon. ✨
        </div>
        <div class="message error-message" id="error">
          Failed to send message. Please try again.
        </div>
      </div>
    </section>

    <script>
      document.querySelector("form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const button = form.querySelector("button");
        const spinner = document.getElementById("spinner");
        const successMsg = document.getElementById("success");
        const errorMsg = document.getElementById("error");

        // Reset messages
        successMsg.style.display = "none";
        errorMsg.style.display = "none";

        // Show loading state
        button.disabled = true;
        spinner.style.display = "inline-block";

        try {
          const response = await fetch("/", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              name: form.name.value,
              email: form.email.value,
              message: form.message.value,
            }),
          });

          if (response.ok) {
            successMsg.style.display = "block";
            form.reset();
            setTimeout(() => {
              successMsg.style.display = "none";
            }, 3000);
          } else {
            throw new Error("Failed to send message");
          }
        } catch (error) {
          errorMsg.style.display = "block";
          setTimeout(() => {
            errorMsg.style.display = "none";
          }, 3000);
        } finally {
          // Reset loading state
          button.disabled = false;
          spinner.style.display = "none";
        }
      });

      // Add smooth scroll reveal
      const observerOptions = {
        threshold: 0.1,
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = "1";
            entry.target.style.transform = "translateY(0)";
          }
        });
      }, observerOptions);

      document.querySelectorAll(".animated").forEach((element) => {
        observer.observe(element);
      });
    </script>
  </body>
</html>
